name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Install Node Packages
        run: npm ci

      - name: Build Electron Packages
        run: npx quasar build -m electron -T linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Tag
        uses: olegtarasov/get-tag@v2
        id: get-tag

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux
          path: dist/electron/Packaged/roue-emotions-${{ steps.get-tag.outputs.tag }}.AppImage

  build-win:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Install Node Packages
        run: npm ci

      - name: Build Electron Packages
        run: npx quasar build -m electron -T win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Tag
        uses: olegtarasov/get-tag@v2
        id: get-tag

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: win
          path: dist/electron/Packaged/roue-emotions-${{ steps.get-tag.outputs.tag }}.exe

  release:
    needs:
      - build-linux
      - build-win
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}

      - name: Download Artifacts
        uses: actions/download-artifact@v2

      - name: Get Tag
        uses: olegtarasov/get-tag@v2
        id: get-tag

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: linux/roue-emotions-${{ steps.get-tag.outputs.tag }}.AppImage
          asset_name: roue-emotions-${{ steps.get-tag.outputs.tag }}.AppImage
          asset_content_type: application/octet-stream

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: win/roue-emotions-${{ steps.get-tag.outputs.tag }}.exe
          asset_name: roue-emotions-${{ steps.get-tag.outputs.tag }}.exe
          asset_content_type: application/octet-stream
